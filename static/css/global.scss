@import './variables';

* {
	box-sizing: border-box !important;
	word-break:break-all;
}

.w-100 {
  width: 100%
}
.h-100 {
  height: 100%;
}
.flex {
  display: flex
}
.flex-column {
  flex-direction: column
}
.flex-wrap {
  flex-wrap: wrap
}
.shrink0 {
  flex-shrink: 0
}
.row-reserve {
	flex-direction: row-reverse;
}
.column-reserve {
	flex-direction: column-reverse;
}

.grow0 {
	flex-grow: 0;
}
.flex0 {
	flex: 0;
}
.shadow {
	box-shadow: 0upx 24rpx 64upx -8upx rgba(0, 0, 0, 0.3);
}
.text-ellipsis {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap ;
}
@each $colorkey, $color in $colors { //配色
   .text-#{$colorkey}{
    color: $color
    };
   .bg-#{$colorkey}{
    background-color: $color
    };
}

.round1 {
	border-radius: 10upx;
}
.round2 {
	border-radius: 20upx;
}
.round3 {
	border-radius: 30upx;
}
.round4 {
	border-radius: 40upx;
}
.round5 {
	border-radius: 50upx;
}
.circle {
	border-radius: 50%;
}
.fs-lg{
	font-size: 28upx;
}
.fs-md{
	font-size: 24upx;
}
.fs-xl {
	font-size: 32upx;
}
.fs-xxl {
	font-size: 36upx;
}
.fs-xxxl {
	font-size: 44upx;
}
.fs-sm {
	font-size: 22upx;
}
.weight1 {
	font-weight: 600;
}
.weight2 {
	font-weight: 700;
}
.weight3 {
	font-weight: 800;
}


@each $typekey, $type in $spacing-type { //生成基础的margin class
  @each $directionkey, $direction in $spacing-direction { //mt-1
    @each $sizekey, $size in $spacing-size {
      .#{$typekey}#{$directionkey}-#{$sizekey} {
        #{$type}-#{$direction}: $size * $base-font-size 
      }
    }
  }
  @each $sizekey, $size in $spacing-size { //m-1:
    .#{$typekey}-#{$sizekey} {
        #{$type}: $size * $base-font-size
    }
  }  
  @each $sizekey, $size in $spacing-size { //mx, my px py
    .#{$typekey}x-#{$sizekey} {
      #{$type}-left: $size * $base-font-size;
      #{$type}-right: $size * $base-font-size
  }
    .#{$typekey}y-#{$sizekey} {
      #{$type}-top: $size * $base-font-size;
      #{$type}-bottom: $size * $base-font-size 
  }
  }
}

@each $flexkey, $flex in $flex-jc { //flex对齐方式
     .jc-#{$flexkey} {
       justify-content: $flex
     }
}
@each $flexkey, $flex in $flex-ai { //flex元素排列方式
     .ai-#{$flexkey} {
       align-items: $flex
     }
}
@each $border-direction in (left, top, bottom, right) { //生成边框颜色四个方向
  .border-#{$border-direction} {
    border-#{$border-direction}: 1px solid $border-color
  }
}
.flex1{
  flex: 1
}
.flex-grow-1{
  flex-grow: 1
}
.border {
	border: 1upx solid $border-color;
}

/* 超出文字部分打点 */
.text-limit {
  // display: flex;
  align-items: center;
  padding-left: 0.2rem;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

